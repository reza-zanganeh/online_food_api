// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  username      String    @unique
  password      String
  fullname      String
  address       String
  role          UserRole  @default(Normal)
  orders        Order[]
  likedFoods    Like[]
  disLikedFoods disLike[]
  comments      Comment[]
}

enum UserRole {
  Admin
  Normal
}

model Order {
  id                    Int         @id @default(autoincrement())
  Status                OrderStatus @default(InCart)
  TotalPrice            Int         @default(0)
  DeliveredTimeInMinute Int         @default(0)
  user                  User        @relation(fields: [userId], references: [id])
  userId                Int
  foods                 FoodOrder[]
}

enum OrderStatus {
  InCart
  Registered
  Approved
}

model Food {
  id             Int         @id @default(autoincrement())
  name           String
  price          Int
  availableCount Int
  description    String
  orders         FoodOrder[]
  likes          Like[]
  disLikes       disLike[]
  comments       Comment[]
}

model FoodOrder {
  id      Int   @id @default(autoincrement())
  food    Food  @relation(fields: [foodId], references: [id])
  foodId  Int
  order   Order @relation(fields: [orderId], references: [id])
  orderId Int
  count   Int   @default(1)
}

model Like {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int
  food   Food @relation(fields: [foodId], references: [id])
  foodId Int
}

model disLike {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int
  food   Food @relation(fields: [foodId], references: [id])
  foodId Int
}

model Comment {
  id      Int      @id @default(autoincrement())
  content String
  date    DateTime @default(now())
  user    User     @relation(fields: [userId], references: [id])
  userId  Int
  food    Food     @relation(fields: [foodId], references: [id])
  foodId  Int
}
